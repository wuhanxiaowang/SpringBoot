
server.port=8888

#数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/test?characterEncoding=utf8&useSSL=true&verifyServerCertificate=false
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver



#最小连接数
spring.datasource.druid.initial-size=5
#最大连接数
spring.datasource.druid.max-active=100
#获取连接最大等待时间
spring.datasource.druid.max-wait=600000
#有两个含义：
#Destroy 1.线程会检测连接的间隔时间,如果连接空闲时间大于等于minEvictableIdleTimeMillis，则关闭物理连接   2.testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.time-between-eviction-runs-millis=600000   
#连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=3000000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validation-query=select 1
#单位：秒，检测连接是否有效的超时时间
spring.datasource.druid.validation-query-timeout = 100000
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.test-on-return=false
#是否缓存preparedStatement时，也就是PSCache.PSCache对支持游标的数据库性能提升巨大，比如说甲骨文。在MySQL的下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为真。在德中，不会存在甲骨文下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
#监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
spring.datasource.druid.filters=stat
#SQL合并配置和慢sql
#spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true


#Mybatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.example.demo.entity
mybatis.configuration.mapUnderscoreToCamelCase=true

#通用Mapper配置
#mapper.identity=MYSQL
#mapper.mappers=com.example.demo.mappers.MyMapper



#mysql日志打印
logging.level.com.example.demo.dao=debug


# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

#regCenter.serverList = localhost:2181
#regCenter.namespace = elastic-job-lite-springboot
#stockJob.cron = 0/5 * * * * ?
#stockJob.shardingTotalCount = 2
#stockJob.shardingItemParameters = 0=Chengdu0,1=Chengdu1


#####本地测试
#elastic.job.server=127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183,
#elastic.job.server=127.0.0.1:2181
#elastic.job.namespace=test-job



curator.retryCount=5  #重试次数
curator.elapsedTimeMs=5000   #重试间隔时间
curator.connectString=127.0.0.1:2181   # zookeeper 地址
curator.sessionTimeoutMs=60000  # session超时时间
curator.connectionTimeoutMs=5000  # 连接超时时间
